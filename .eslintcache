[{"C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\index.js":"1","C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\App.js":"2","C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\components\\layout\\Header.js":"4","C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\components\\layout\\Navegacion.js":"5","C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\components\\clients\\Clientes.js":"6","C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\components\\pedidos\\Pedidos.js":"7","C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\components\\productos\\Productos.js":"8","C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\config\\axios.js":"9","C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\components\\clients\\cliente.js":"10","C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\components\\clients\\Cliente.js":"11","C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\components\\clients\\NuevoCliente.js":"12","C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\components\\clients\\EditarCliente.js":"13","C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\components\\productos\\NuevoProducto.js":"14","C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\components\\productos\\EditarProducto.js":"15","C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\components\\productos\\Producto.js":"16","C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\components\\layout\\Spinner.js":"17","C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\components\\pedidos\\NuevoPedido.js":"18","C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\components\\pedidos\\FormBuscarProducto.js":"19","C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\components\\pedidos\\FormCantidadProducto.js":"20","C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\components\\pedidos\\DetallesPedido.js":"21"},{"size":478,"mtime":1609980066783,"results":"22","hashOfConfig":"23"},{"size":1711,"mtime":1610143189751,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":274,"mtime":1609980994246,"results":"26","hashOfConfig":"23"},{"size":533,"mtime":1609985645558,"results":"27","hashOfConfig":"23"},{"size":1242,"mtime":1610055761965,"results":"28","hashOfConfig":"23"},{"size":899,"mtime":1610215410442,"results":"29","hashOfConfig":"23"},{"size":1357,"mtime":1610055561060,"results":"30","hashOfConfig":"23"},{"size":138,"mtime":1609984224915,"results":"31","hashOfConfig":"23"},{"size":808,"mtime":1609986128978,"results":"32","hashOfConfig":"23"},{"size":1614,"mtime":1610143294744,"results":"33","hashOfConfig":"23"},{"size":3887,"mtime":1610048676649,"results":"34","hashOfConfig":"23"},{"size":4654,"mtime":1610050319902,"results":"35","hashOfConfig":"23"},{"size":3086,"mtime":1610059398657,"results":"36","hashOfConfig":"23"},{"size":3633,"mtime":1610074775985,"results":"37","hashOfConfig":"23"},{"size":1457,"mtime":1610074144874,"results":"38","hashOfConfig":"23"},{"size":392,"mtime":1610055497198,"results":"39","hashOfConfig":"23"},{"size":5811,"mtime":1610215394738,"results":"40","hashOfConfig":"23"},{"size":772,"mtime":1610145093313,"results":"41","hashOfConfig":"23"},{"size":1261,"mtime":1610211730857,"results":"42","hashOfConfig":"23"},{"size":1128,"mtime":1610215544440,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"5ju9nd",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\index.js",[],["90","91"],"C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\App.js",[],"C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\components\\layout\\Header.js",[],"C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\components\\layout\\Navegacion.js",[],"C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\components\\clients\\Clientes.js",[],"C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\components\\pedidos\\Pedidos.js",[],"C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\components\\productos\\Productos.js",[],"C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\config\\axios.js",[],"C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\components\\clients\\cliente.js",["92","93"],"C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\components\\clients\\Cliente.js",[],"C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\components\\clients\\NuevoCliente.js",[],"C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\components\\clients\\EditarCliente.js",["94"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport clienteAxios from '../../config/axios';\r\nimport alertify from 'alertifyjs';\r\nimport { withRouter } from 'react-router-dom'\r\n\r\n\r\nconst EditarCliente = (props) => {\r\n    //obtener el id\r\n    const { id } = props.match.params;\r\n    //  console.log(id);\r\n\r\n    const [cliente, datoscliente] = useState({\r\n        nombre: '',\r\n        apellido: '',\r\n        empresa: '',\r\n        email: '',\r\n        telefono: ''\r\n    });\r\n\r\n    //query a la API\r\n    const consultarAPI = async () => {\r\n        const clienteConsulta = await clienteAxios.get(`/clientes/${id}`);\r\n        // console.log(clienteConsulta.data);\r\n        datoscliente(clienteConsulta.data);\r\n    }\r\n\r\n    //useEffect cuando el componente carga\r\n    useEffect(() => {\r\n        consultarAPI();\r\n    }, []);\r\n\r\n    //Leer los datos del form\r\n    const actualizarState = e => {\r\n\r\n        //Almacenar lo que el usuario escribe en el state\r\n        datoscliente({\r\n            ...cliente,\r\n            [e.target.name]: e.target.value\r\n        })\r\n        // console.log(cliente);\r\n    }\r\n\r\n    //Envia peticion axios para aactualizarCliente\r\n    const actualizarCliente = e => {\r\n        e.preventDefault();\r\n\r\n        //Enviar por peticion axios\r\n        clienteAxios.put(`/clientes/${cliente._id}`, cliente)\r\n            .then(res => {\r\n                // validar si hay errores de mongo\r\n                if (res.data.code === 11000) {\r\n                    alertify.error('Ese cliente ya existe');\r\n                } else {\r\n                    alertify.success('Se actualizo correctamente');\r\n                }\r\n                //Redireccionar\r\n                props.history.push('/')\r\n            })\r\n    }\r\n\r\n    //Validar el formulario\r\n    const validarCliente = () => {\r\n        const { nombre, apellido, email, empresa, telefono } = cliente;\r\n\r\n        let valido = !nombre.length || !apellido.length || !empresa.length || !email.length || !telefono.length;\r\n\r\n        return valido;\r\n    }\r\n\r\n    const { nombre, apellido, email, empresa, telefono } = cliente;\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>Editar Cliente</h2>\r\n            <form\r\n                onSubmit={actualizarCliente}\r\n            >\r\n                <legend>Llena todos los campos</legend>\r\n\r\n                <div className=\"campo\">\r\n                    <label>Nombre:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Nombre Cliente\"\r\n                        name=\"nombre\"\r\n                        onChange={actualizarState}\r\n                        value={nombre}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"campo\">\r\n                    <label>Apellido:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Apellido Cliente\"\r\n                        name=\"apellido\"\r\n                        onChange={actualizarState}\r\n                        value={apellido}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"campo\">\r\n                    <label>Empresa:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Empresa Cliente\"\r\n                        name=\"empresa\"\r\n                        onChange={actualizarState}\r\n                        value={empresa}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"campo\">\r\n                    <label>Email:</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        placeholder=\"Email Cliente\"\r\n                        name=\"email\"\r\n                        onChange={actualizarState}\r\n                        value={email}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"campo\">\r\n                    <label>Teléfono:</label>\r\n                    <input\r\n                        type=\"tel\"\r\n                        placeholder=\"Teléfono Cliente\"\r\n                        name=\"telefono\"\r\n                        onChange={actualizarState}\r\n                        value={telefono}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"enviar\">\r\n                    <input\r\n                        type=\"submit\"\r\n                        className=\"btn btn-azul\"\r\n                        value=\"Guardar Cambios\"\r\n                        disabled={validarCliente()}\r\n                    />\r\n                </div>\r\n\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default withRouter(EditarCliente);","C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\components\\productos\\NuevoProducto.js",[],"C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\components\\productos\\EditarProducto.js",["95"],"import React, { useState, useEffect, Fragment } from 'react'\r\nimport alertify from 'alertifyjs';\r\nimport clienteAxios from '../../config/axios';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst EditarProducto = (props) => {\r\n\r\n  // obtener el ID\r\n  const { id } = props.match.params;\r\n\r\n  // producto = state, y funcion para actualizar\r\n  const [producto, guardarProducto] = useState({\r\n    nombre: '',\r\n    precio: '',\r\n    imagen: ''\r\n  });\r\n\r\n  // archivo = state, guardarArchivo = setState\r\n  const [archivo, guardarArchivo] = useState('');\r\n\r\n  // cuando el componente carga\r\n  useEffect(() => {\r\n    // consultar la api para traer el producto a editar\r\n    const consultarAPI = async () => {\r\n      const productoConsulta = await clienteAxios.get(`/productos/${id}`);\r\n      guardarProducto(productoConsulta.data);\r\n      // console.log(productoConsulta.data);\r\n    }\r\n\r\n    consultarAPI();\r\n  }, [])\r\n\r\n  //Editar un producto en la BD\r\n  const editarProducto = async e => {\r\n    e.preventDefault();\r\n\r\n    // crear un formdata\r\n    const formData = new FormData();\r\n    formData.append('nombre', producto.nombre);\r\n    formData.append('precio', producto.precio);\r\n    formData.append('imagen', archivo);\r\n\r\n    // almacenarlo en la BD\r\n    try {\r\n      const res = await clienteAxios.put(`/productos/${id}`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n\r\n      // Lanzar una alerta\r\n      if (res.status === 200) {\r\n        alertify.success('Actualizado correctamente');\r\n      }\r\n\r\n      // redireccionar\r\n      props.history.push('/productos');\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n      // lanzar alerta\r\n      alertify.error('Hubo un error');\r\n    }\r\n  }\r\n\r\n  // leer los datos del formulario\r\n  const leerInformacionProducto = e => {\r\n    guardarProducto({\r\n      // obtener una copia del state y agregar el nuevo\r\n      ...producto,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  // coloca la imagen en el state\r\n  const leerArchivo = e => {\r\n    guardarArchivo(e.target.files[0]);\r\n  }\r\n  const { nombre, precio, imagen } = producto;\r\n\r\n  if (!nombre) return <Spinner />\r\n  return (\r\n    <Fragment>\r\n      <h2>Editar Producto</h2>\r\n      <form\r\n        onSubmit={editarProducto}\r\n      >\r\n        <legend>Llena todos los campos</legend>\r\n\r\n        <div className=\"campo\">\r\n          <label>Nombre:</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Nombre Producto\"\r\n            name=\"nombre\"\r\n            onChange={leerInformacionProducto}\r\n            defaultValue={nombre}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"campo\">\r\n          <label>Precio:</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"precio\"\r\n            min=\"0.00\"\r\n            step=\"0.01\"\r\n            placeholder=\"Precio\"\r\n            onChange={leerInformacionProducto}\r\n            defaultValue={precio}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"campo\">\r\n          <label>Imagen:</label>\r\n          {imagen ? (\r\n            <img\r\n              src={`http:///localhost:5000/${imagen}`}\r\n              alt=\"imagen\"\r\n              width=\"300\"\r\n            />\r\n          ) : null}\r\n          <input\r\n            type=\"file\"\r\n            name=\"imagen\"\r\n            onChange={leerArchivo}\r\n\r\n          />\r\n        </div>\r\n\r\n        <div className=\"enviar\">\r\n          <input type=\"submit\" className=\"btn btn-azul\" value=\"Guardar Cambios\" />\r\n        </div>\r\n      </form>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default withRouter(EditarProducto);","C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\components\\productos\\Producto.js",["96"],"import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport alertify from 'alertifyjs';\r\nimport clienteAxios from '../../config/axios';\r\n\r\nconst Producto = ({ producto }) => {\r\n   // console.log(producto);\r\n\r\n   const eliminarProducto = id => {\r\n\r\n      clienteAxios.delete(`/productos/${_id}`)\r\n         .then(res => {\r\n            if (res.status === 200) {\r\n               alertify.success(res.data.mensaje);\r\n            }\r\n         })\r\n\r\n\r\n   }\r\n   const { _id, nombre, precio, imagen } = producto;\r\n   return (\r\n      <li className=\"producto\">\r\n         <div className=\"info-producto\">\r\n            <p className=\"nombre\">{nombre}</p>\r\n            <p className=\"precio\">${precio} </p>\r\n            {\r\n               imagen ? (\r\n                  <img src={`http://localhost:5000/${imagen}`} alt=\"Imagen\" />\r\n               ) : null\r\n            }\r\n         </div>\r\n         <div className=\"acciones\">\r\n            <Link to={`/productos/editar/${_id}`} className=\"btn btn-azul\">\r\n               <i className=\"fas fa-pen-alt\"></i>\r\n              Editar Producto\r\n          </Link>\r\n\r\n            <button\r\n               type=\"button\"\r\n               className=\"btn btn-rojo btn-eliminar\"\r\n               onClick={() => eliminarProducto(_id)}\r\n            >\r\n               <i className=\"fas fa-times\"></i>\r\n              Eliminar Producto\r\n          </button>\r\n         </div>\r\n      </li>\r\n   )\r\n}\r\nexport default Producto;","C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\components\\layout\\Spinner.js",[],"C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\components\\pedidos\\NuevoPedido.js",["97"],"C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\components\\pedidos\\FormBuscarProducto.js",[],"C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\components\\pedidos\\FormCantidadProducto.js",[],"C:\\Users\\Developer\\Desktop\\CRM-clientes\\frontend\\src\\components\\pedidos\\DetallesPedido.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":2,"message":"103","line":7,"column":40,"nodeType":"104","messageId":"105","endLine":7,"endColumn":48},{"ruleId":"106","severity":1,"message":"107","line":13,"column":17,"nodeType":"108","endLine":13,"endColumn":54},{"ruleId":"109","severity":1,"message":"110","line":30,"column":8,"nodeType":"111","endLine":30,"endColumn":10,"suggestions":"112"},{"ruleId":"109","severity":1,"message":"113","line":32,"column":6,"nodeType":"111","endLine":32,"endColumn":8,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":17,"nodeType":"104","messageId":"117","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"118","line":35,"column":8,"nodeType":"111","endLine":35,"endColumn":19,"suggestions":"119"},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-undef","'clientes' is not defined.","Identifier","undef","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'consultarAPI'. Either include it or remove the dependency array.","ArrayExpression",["122"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["123"],"no-unused-vars","'Fragment' is defined but never used.","unusedVar","React Hook useEffect has missing dependencies: 'actualizarTotal' and 'id'. Either include them or remove the dependency array.",["124"],"no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},"Update the dependencies array to be: [consultarAPI]",{"range":"131","text":"132"},"Update the dependencies array to be: [id]",{"range":"133","text":"134"},"Update the dependencies array to be: [actualizarTotal, id, productos]",{"range":"135","text":"136"},[828,830],"[consultarAPI]",[953,955],"[id]",[1057,1068],"[actualizarTotal, id, productos]"]